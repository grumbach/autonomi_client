name: API Integration Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  merge_group:
    branches: [ main ]

env:
  CARGO_INCREMENTAL: 0

jobs:
  api-integration-tests:
    name: "API Integration Tests"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: windows-latest
          - os: macos-latest
    steps:
      - uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - uses: Swatinem/rust-cache@v2

      - name: Build autonomi library
        run: cargo build --release --package autonomi
        timeout-minutes: 30

      - name: Start Autonomi Network
        uses: maidsafe/autonomi-actions/spawn-autonomi-network@v1
        with:
          autonomi-version: 'stable-2025.7.1.3'
          node-count: '25'
          enable-evm: 'true'

      - name: Check network environment variables
        shell: bash
        run: |
          if [[ -z "$ANT_PEERS" ]]; then
            echo "The ANT_PEERS variable has not been set"
            exit 1
          elif [[ -z "$EVM_NETWORK" ]]; then
            echo "The EVM_NETWORK variable has not been set"
            exit 1
          else
            echo "ANT_PEERS has been set to $ANT_PEERS"
            echo "EVM_NETWORK has been set to $EVM_NETWORK"
          fi

      - name: Run autonomi integration tests
        run: cargo test --package autonomi --tests -- --nocapture
        env:
          ANT_LOG: "v"
          CARGO_TARGET_DIR: ${{ matrix.os == 'windows-latest' && './test-target' || '.' }}
        timeout-minutes: 20

      - name: Cleanup Autonomi Network
        if: always()
        uses: maidsafe/autonomi-actions/cleanup-autonomi-network@v1
        with:
          upload-logs: 'true'
          keep-directories: 'false'